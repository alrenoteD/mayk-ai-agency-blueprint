
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Loader2, Copy, CheckCircle } from "lucide-react";
import { useToast } from "@/components/ui/use-toast";
import { useQuery } from '@tanstack/react-query';

type CopyType = 'problema-agitacao-solucao' | 'testemunho' | 'resultado-especifico';
type CopyIndustry = 'geral' | 'cabeleireiro' | 'odontologia' | 'imobiliaria' | 'ecommerce' | 'clinica';
type CopyPurpose = 'atendimento' | 'agendamento' | 'automacao' | 'vendas';

interface GeneratorFormData {
  type: CopyType;
  industry: CopyIndustry;
  purpose: CopyPurpose;
  customPrompt: string;
}

// Mock API call to simulate AI generation
// In a real implementation, this would call an actual AI service
const generateCopy = async (formData: GeneratorFormData): Promise<string> => {
  // Simulate API call delay
  await new Promise(resolve => setTimeout(resolve, 2000));
  
  const templates = {
    'problema-agitacao-solucao': {
      geral: {
        atendimento: `
# Problema
Sua equipe perde 3 horas por dia respondendo as mesmas perguntas de clientes no WhatsApp?

# Agita√ß√£o
Enquanto isso, vendas s√£o perdidas, clientes ficam irritados com a demora e voc√™ paga sal√°rios para tarefas repetitivas que poderiam ser automatizadas.

# Solu√ß√£o
Apresentamos o Assistente Virtual para WhatsApp que responde d√∫vidas 24/7, gera leads e permite que sua equipe foque no que realmente importa: fechar vendas.

# Call to Action
üëâ Agende uma demonstra√ß√£o gratuita e veja como economizar mais de R$2.500/m√™s em custos operacionais.`,
        agendamento: `
# Problema
Cansado de perder tempo organizando sua agenda e lidando com remarca√ß√µes de √∫ltima hora?

# Agita√ß√£o
A cada hora que voc√™ perde com gerenciamento de agenda, s√£o R$200 que deixam de entrar no seu caixa. Sem contar os clientes que desistem por n√£o conseguirem hor√°rios convenientes.

# Solu√ß√£o
Nosso Bot de Agendamento automatiza todo o processo, permite que clientes agendem 24h/dia diretamente pelo WhatsApp, e envia lembretes autom√°ticos para reduzir faltas em 70%.

# Call to Action
üóìÔ∏è Experimente gratuitamente por 7 dias e veja sua agenda sempre cheia, sem esfor√ßo.`
      },
      cabeleireiro: {
        atendimento: `
# Problema
Seu sal√£o perde clientes porque n√£o consegue responder mensagens enquanto atende outros clientes?

# Agita√ß√£o
Cada mensagem n√£o respondida pode significar um cliente que vai para o concorrente. E pior: clientes insatisfeitos compartilham sua frustra√ß√£o com pelo menos 9 pessoas.

# Solu√ß√£o
Nosso Assistente Virtual para Sal√µes responde perguntas sobre servi√ßos, pre√ßos e disponibilidade instantaneamente pelo WhatsApp, mesmo quando voc√™ est√° com as m√£os ocupadas.

# Call to Action
üíá‚Äç‚ôÄÔ∏è Agende uma demonstra√ß√£o e veja como aumentar sua clientela em at√© 30% em apenas 2 meses.`,
        agendamento: `
# Problema
Seu sal√£o sofre com hor√°rios vazios ou est√° perdendo clientes por falta de disponibilidade na agenda?

# Agita√ß√£o
Cada hor√°rio vazio representa dinheiro jogado fora, enquanto clientes insatisfeitos com a dificuldade de agendamento procuram outros sal√µes. A rotatividade de clientes custa 5x mais que manter os atuais.

# Solu√ß√£o
Nosso Sistema de Agendamento Inteligente para Sal√µes otimiza sua agenda, permite que clientes marquem pelo WhatsApp 24h/dia e envia lembretes que reduzem faltas em at√© 60%.

# Call to Action
‚úÇÔ∏è Implemente em 48h e veja sua agenda sempre cheia, sem esfor√ßo.`
      },
      odontologia: {
        atendimento: `
# Problema
Sua cl√≠nica odontol√≥gica est√° perdendo pacientes para concorrentes que respondem mais r√°pido?

# Agita√ß√£o
73% dos pacientes escolhem o dentista que responde primeiro. Enquanto sua secret√°ria est√° ocupada, chamadas s√£o perdidas e mensagens ficam sem resposta por horas.

# Solu√ß√£o
Nosso Assistente Virtual para Cl√≠nicas Odontol√≥gicas responde d√∫vidas frequentes, faz triagem inicial e marca consultas 24h por dia, garantindo que nenhum potencial paciente fique sem atendimento.

# Call to Action
ü¶∑ Agende uma demonstra√ß√£o gratuita e veja como aumentar suas convers√µes em at√© 40%.`
      }
    },
    'testemunho': {
      odontologia: {
        atendimento: `
"Nossa cl√≠nica reduziu as faltas em 78% desde que implementamos o sistema de lembretes automatizados da Deylith. Os pacientes adoram a facilidade de confirmar ou remarcar pelo WhatsApp com apenas um clique, e nossa equipe economiza cerca de 3 horas por dia que antes eram gastas fazendo liga√ß√µes de confirma√ß√£o."

Dra. Isabela Mendes
Diretora Cl√≠nica - Odontomed Specialists
S√£o Paulo, SP

A Odontomed atende mais de 500 pacientes por m√™s e implementou nossa solu√ß√£o h√° apenas 3 meses, j√° registrando um aumento de 23% na taxa de ocupa√ß√£o de hor√°rios.`
      },
      cabeleireiro: {
        agendamento: `
"Desde que implementei o bot de agendamento da Deylith.dev, meu sal√£o est√° sempre cheio e nunca mais perdi tempo organizando agenda. Meus clientes adoram poder marcar hor√°rios pelo WhatsApp a qualquer hora, e os lembretes autom√°ticos reduziram as faltas em mais de 50%. Foi o melhor investimento que fiz para o meu neg√≥cio em anos!"

Ricardo Oliveira
Propriet√°rio - Studio R Hair Design
Rio de Janeiro, RJ

O Studio R aumentou seu faturamento em 35% nos primeiros 60 dias de uso da nossa plataforma, sem precisar contratar mais funcion√°rios.`
      }
    },
    'resultado-especifico': {
      imobiliaria: {
        automacao: `
[PARA IMOBILI√ÅRIAS] Como triplicamos o n√∫mero de visitas agendadas usando automa√ß√£o via WhatsApp

Nossa solu√ß√£o de qualifica√ß√£o autom√°tica de leads para imobili√°rias j√° processou mais de 12.000 atendimentos em 30 imobili√°rias parceiras no √∫ltimo trimestre.

O bot identifica o perfil do comprador, filtra im√≥veis compat√≠veis e j√° agenda visitas, tudo sem interven√ß√£o humana.

üè† Aumente suas vendas em at√© 43% - Implanta√ß√£o em apenas 7 dias. Fale agora com um especialista!`
      },
      ecommerce: {
        vendas: `
[PARA E-COMMERCES] Como reduzimos o abandono de carrinho em 62% com IA no WhatsApp

Nossa solu√ß√£o de recupera√ß√£o de carrinhos j√° resgatou mais de R$780.000 em vendas para 25 e-commerces parceiros apenas este m√™s.

Al√©m de enviar lembretes personalizados, nosso bot responde d√∫vidas sobre produtos e oferece cupons de desconto espec√≠ficos.

üõí Pare de perder vendas por abandono de carrinho. Implanta√ß√£o em 48h e pagamento apenas pelo resultado!`
      },
      clinica: {
        agendamento: `
[PARA CL√çNICAS] Como reduzimos em 70% as faltas de pacientes usando IA no WhatsApp

Nossa solu√ß√£o de confirma√ß√£o automatizada j√° evitou mais de 450 faltas em 20 cl√≠nicas parceiras no √∫ltimo m√™s.

Al√©m de enviar lembretes personalizados, nosso bot gerencia remarca√ß√µes sem interven√ß√£o humana.

ü©∫ Elimine hor√°rios ociosos e aumente seu faturamento. Fale com um especialista hoje!`
      }
    }
  };
  
  // Try to get template from our predefined options
  let result = '';
  try {
    result = templates[formData.type][formData.industry][formData.purpose];
  } catch (e) {
    // If combination doesn't exist, generate based on custom prompt
    result = `## Copy para ${formData.industry} - ${formData.purpose}

${formData.customPrompt}

(Este √© um exemplo de copy gerado para demonstra√ß√£o. Em uma implementa√ß√£o real, um modelo de IA criaria conte√∫do personalizado para esta combina√ß√£o espec√≠fica.)`;
  }
  
  return result;
};

const CopyGeneratorTab: React.FC = () => {
  const [formData, setFormData] = useState<GeneratorFormData>({
    type: 'problema-agitacao-solucao',
    industry: 'geral',
    purpose: 'atendimento',
    customPrompt: ''
  });
  
  const [showCopy, setShowCopy] = useState(false);
  const [isCopied, setIsCopied] = useState(false);
  const { toast } = useToast();
  
  const { data, isLoading, refetch } = useQuery({
    queryKey: ['generateCopy', formData],
    queryFn: () => generateCopy(formData),
    enabled: false
  });
  
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setShowCopy(false);
    refetch().then(() => {
      setShowCopy(true);
    });
  };
  
  const handleInputChange = (field: keyof GeneratorFormData, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };
  
  const copyToClipboard = () => {
    if (data) {
      navigator.clipboard.writeText(data);
      setIsCopied(true);
      toast({
        description: "Texto copiado para a √°rea de transfer√™ncia!",
        duration: 3000
      });
      
      setTimeout(() => {
        setIsCopied(false);
      }, 3000);
    }
  };
  
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
      <Card className="card-gradient">
        <CardHeader>
          <CardTitle>Gerador de Copy com IA</CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="copyType">Tipo de Copy</Label>
              <Select 
                value={formData.type} 
                onValueChange={(value) => handleInputChange('type', value as CopyType)}
              >
                <SelectTrigger>
                  <SelectValue placeholder="Selecione o tipo de copy" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="problema-agitacao-solucao">Problema-Agita√ß√£o-Solu√ß√£o</SelectItem>
                  <SelectItem value="testemunho">Testemunho</SelectItem>
                  <SelectItem value="resultado-especifico">Resultado Espec√≠fico</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div className="space-y-2">
              <Label htmlFor="industry">Ind√∫stria/Nicho</Label>
              <Select 
                value={formData.industry} 
                onValueChange={(value) => handleInputChange('industry', value as CopyIndustry)}
              >
                <SelectTrigger>
                  <SelectValue placeholder="Selecione a ind√∫stria" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="geral">Geral</SelectItem>
                  <SelectItem value="cabeleireiro">Cabeleireiro</SelectItem>
                  <SelectItem value="odontologia">Odontologia</SelectItem>
                  <SelectItem value="imobiliaria">Imobili√°ria</SelectItem>
                  <SelectItem value="ecommerce">E-commerce</SelectItem>
                  <SelectItem value="clinica">Cl√≠nica M√©dica</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div className="space-y-2">
              <Label htmlFor="purpose">Finalidade</Label>
              <Select 
                value={formData.purpose} 
                onValueChange={(value) => handleInputChange('purpose', value as CopyPurpose)}
              >
                <SelectTrigger>
                  <SelectValue placeholder="Selecione a finalidade" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="atendimento">Atendimento</SelectItem>
                  <SelectItem value="agendamento">Agendamento</SelectItem>
                  <SelectItem value="automacao">Automa√ß√£o</SelectItem>
                  <SelectItem value="vendas">Vendas</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div className="space-y-2">
              <Label htmlFor="customPrompt">Detalhes Adicionais (opcional)</Label>
              <Textarea 
                id="customPrompt"
                placeholder="Insira detalhes espec√≠ficos para personalizar seu copy..."
                value={formData.customPrompt}
                onChange={(e) => handleInputChange('customPrompt', e.target.value)}
                className="min-h-[100px]"
              />
            </div>
            
            <Button type="submit" className="w-full" disabled={isLoading}>
              {isLoading ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  Gerando copy...
                </>
              ) : "Gerar Copy"}
            </Button>
          </form>
        </CardContent>
      </Card>
      
      <Card className="card-gradient">
        <CardHeader>
          <CardTitle className="flex justify-between items-center">
            <span>Copy Gerado</span>
            {showCopy && data && (
              <Button variant="outline" size="sm" onClick={copyToClipboard} className="flex gap-2 items-center">
                {isCopied ? (
                  <>
                    <CheckCircle className="h-4 w-4" />
                    Copiado
                  </>
                ) : (
                  <>
                    <Copy className="h-4 w-4" />
                    Copiar
                  </>
                )}
              </Button>
            )}
          </CardTitle>
        </CardHeader>
        <CardContent>
          {isLoading ? (
            <div className="flex flex-col items-center justify-center h-80 text-center">
              <Loader2 className="h-12 w-12 animate-spin text-primary mb-4" />
              <p className="text-muted-foreground">Gerando o melhor copy para sua necessidade...</p>
            </div>
          ) : showCopy && data ? (
            <div className="prose prose-sm dark:prose-invert max-w-none">
              <div className="bg-background/50 border rounded-lg p-4 whitespace-pre-line">
                {data}
              </div>
            </div>
          ) : (
            <div className="flex flex-col items-center justify-center h-80 text-center">
              <p className="text-muted-foreground">Preencha o formul√°rio e clique em "Gerar Copy" para criar seu texto de vendas personalizado.</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default CopyGeneratorTab;
